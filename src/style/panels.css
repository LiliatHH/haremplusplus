.qh-panel > .panel > h2 {
  font-size: 1.5em;
}

.qh-panel > .panel > p {
  margin: 8px;
}

.panel.summary {
  display: flex;
  align-items: center;
  min-width: 55vw;
  flex-direction: column;
}

.summary-content {
  overflow: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 20px;
  align-self: stretch;
}

.game-extension.hidden > .qh-panel {
  /* 
  * Ensure we don't override visibility behavior from the parent
  * when the parent is hidden, but the panel is still visible.
  * Both must be hidden immediately.
  */
  visibility: inherit;
  transition: none;
}

.qh-panel {
  display: flex;
  flex-direction: column;
}

.qh-panel > .panel > .close-popup {
  position: absolute;
  top: 15px;
  right: 65px;
}

.panel.filters,
.panel.sort {
  display: flex;
  flex-direction: column;
}

.panel.filters > .filters-list {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 5px;
  margin-top: 10px;

  overflow-y: auto;
  overflow-x: clip;
}

.filter-entry {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 5px;
}

.filter-entry > .filter-label {
  min-width: 14ch;
  display: inline-block;
  text-align: left;
}

.filter-entry button.toggle {
  min-width: 10ch;
}

.filter-entry.rarity > button.toggle,
.filter-entry.power > button.toggle {
  /** Use more compact buttons for Rarity and Potential power, as we have many of them */
  min-width: initial;
  padding-left: 8px;
  padding-right: 8px;
}

.qh-filter-status {
  width: 1.5em;
  height: 1.5em;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  cursor: pointer;
  margin-right: 5px;
}

.qh-filter-status.active {
  background-image: url(https://hh2.hh-content.com/design/green_tick.png);
}

.qh-filter-status.ready {
  background-image: url(https://hh2.hh-content.com/design/green_tick_empty.png);
}

.qh-filter-status.invalid {
  background-image: url(https://hh2.hh-content.com/clubs/ic_xCross.png);
  cursor: initial;
}

.manage-filters {
  display: flex;
  flex-direction: row;
  gap: 10px;
  justify-content: center;
}

.sort-list > button.hh-action-button.active {
  background: linear-gradient(to bottom, #ffa23e 0, #c41b53 100%);
}

.sort-list {
  display: flex;
  flex-direction: column;
  gap: 0.4em;
  align-items: flex-start;
  overflow: auto;
}

.sort-list > * {
  min-width: 30%;
}

.toggle-filter.Element {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: nowrap;
  gap: 0.5ch;
}

.element-blessing {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: nowrap;
  gap: 0.5ch;
}

.element-blessing > .element {
  display: inline;
}

/** Summary */

.resources-summary {
  width: 100%;
}

.resources-summary > .gems-summary {
  width: 100%;
  display: inline-grid;
  justify-items: left;
  justify-content: center;
  grid-template-columns: repeat(auto-fit, 15ch);
  column-gap: 2em;
}

/**
 * For larger screens, limit to 4 columns
 */
@media screen and (min-width: 900px) {
  .resources-summary > .gems-summary {
    grid-template-columns: repeat(4, 15ch);
  }
}

.resources-summary > .gems-summary > * {
  display: flex;
  flex-direction: row;
  column-gap: 0.8em;
  align-items: center;
}

.blessing-summary-entry.Pose {
  display: flex;
  flex-direction: row;
  column-gap: 0.5em;
  align-items: center;
}

.blessing-summary-entry.Pose span {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.blessing-summary-entry.Pose .unknown-pose {
  width: 1.8em;
  height: 1.8em;
  text-align: center;
  display: inline-block;
  vertical-align: center;
  line-height: 1.8em;
}

.blessing-summary-entry.Pose .pose-icon {
  width: 2.5em;
  height: 2.5em;
  /* 
  Pose images have a large margin ; reduce it to avoid
  large gaps between summary entries 
  */
  margin: -0.35em;
}

.summary-content > p > .ego-bonus {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
}

.summary-content > p > .ego-bonus > .endurance-icon {
  height: 1.25em;
  margin-left: 0.4em;
}

button.toggle.qh-class {
  /** For Class toggle, use both the class image and the pressed/unpressed background gradient */
  background-image: var(--class-image),
    linear-gradient(
      to bottom,
      rgba(60, 60, 60, 0.7) 0,
      rgba(10, 10, 10, 0.9) 100%
    );
  /** Place the class image to the left, without overlapping the text */
  background-position: 10px center, 0px 0px;
  background-size: auto 80%, auto auto;
  background-repeat: no-repeat;
  padding-left: 20px;
}

button.toggle.qh-class.pressed {
  background-image: var(--class-image),
    linear-gradient(to bottom, #ffa23e 0, #c41b53 100%);
}

.inactive > button.toggle.qh-class.pressed {
  background-image: var(--class-image),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0, rgba(88, 88, 88, 0.3) 100%);
}

button.toggle.qh-class.hardcore {
  --class-image: url(https://hh2.hh-content.com/pictures/misc/items_icons/1.png);
}

button.toggle.qh-class.charm {
  --class-image: url(https://hh2.hh-content.com/pictures/misc/items_icons/2.png);
}
button.toggle.qh-class.knowhow {
  --class-image: url(https://hh2.hh-content.com/pictures/misc/items_icons/3.png);
}
